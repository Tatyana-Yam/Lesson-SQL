/*Вывести все заказы Баранова Павла (id заказа, какие книги, по какой цене и в каком количестве он заказал) в отсортированном по номеру заказа и названиям книг виде.*/
select buy.buy_id, book.title, book.price, buy_book.amount
from client
    inner join buy on client.client_id = buy.client_id
    inner join buy_book on buy.buy_id = buy_book.buy_id
    inner join book on buy_book.book_id = book.book_id
where client.name_client = 'Баранов Павел'
order by buy_id, title;

/*Посчитать, сколько раз была заказана каждая книга, для книги вывести ее автора (нужно посчитать, в каком количестве заказов фигурирует каждая книга).  
Вывести фамилию и инициалы автора, название книги, последний столбец назвать Количество. 
Результат отсортировать сначала  по фамилиям авторов, а потом по названиям книг.*/
select author.name_author, book.title, count(buy_book.buy_id) as Количество
from
    author
    inner join book on author.author_id = book.author_id
    left join buy_book on book.book_id = buy_book.book_id
group by author.name_author, book.title
order by author.name_author, book.title

/*Вывести города, в которых живут клиенты, оформлявшие заказы в интернет-магазине. Указать количество заказов в каждый город, этот столбец назвать Количество. 
Информацию вывести по убыванию количества заказов, а затем в алфавитном порядке по названию городов.*/
select city.name_city, count(buy.buy_id) as Количество
from city
    inner join client on city.city_id = client.city_id
    inner join buy on client.client_id = buy.client_id
group by city.name_city
order by Количество desc, city.name_city

/*Вывести номера всех оплаченных заказов и даты, когда они были оплачены.*/
select buy_step.buy_id, buy_step.date_step_end
from
    step
    inner join buy_step using(step_id)
where step.step_id = 1 and buy_step.date_step_end is not null

/*Вывести информацию о каждом заказе: его номер, кто его сформировал (фамилия пользователя) и его стоимость (сумма произведений количества заказанных книг и их цены), 
в отсортированном по номеру заказа виде. 
Последний столбец назвать Стоимость.*/
select buy.buy_id, client.name_client, sum(buy_book.amount * book.price) as Стоимость
from
    buy_book
    inner join buy using(buy_id)
    inner join client using(client_id)
    inner join book using(book_id)
group by buy.buy_id, client.name_client
order by buy.buy_id

/*Вывести номера заказов (buy_id) и названия этапов,  на которых они в данный момент находятся. Если заказ доставлен –  информацию о нем не выводить. 
Информацию отсортировать по возрастанию buy_id.*/
select buy_step.buy_id, step.name_step
from buy_step
    inner join step using(step_id)
where buy_step.date_step_end is null
group by buy_step.buy_id, step.name_step, step.step_id, date_step_beg
having date_step_beg is not null
order by buy_step.buy_id

/*В таблице city для каждого города указано количество дней, за которые заказ может быть доставлен в этот город (рассматривается только этап Транспортировка). 
Для тех заказов, которые прошли этап транспортировки, вывести количество дней за которое заказ реально доставлен в город. 
А также, если заказ доставлен с опозданием, указать количество дней задержки, в противном случае вывести 0. В результат включить номер заказа (buy_id), 
а также вычисляемые столбцы Количество_дней и Опоздание. 
Информацию вывести в отсортированном по номеру заказа виде.*/
select buy.buy_id,  
    datediff(date_step_end, date_step_beg) as Количество_дней, 
    if ((datediff(date_step_end, date_step_beg) - city.days_delivery) > 0, 
        (datediff(date_step_end, date_step_beg) - city.days_delivery), 0) as Опоздание
from
    buy
    inner join buy_step using(buy_id)
    inner join step using(step_id)
    inner join client using(client_id)
    inner join city using(city_id)
where name_step = "Транспортировка" and date_step_beg is not null and date_step_end is not null
order by buy.buy_id

/*Выбрать всех клиентов, которые заказывали книги Достоевского, информацию вывести в отсортированном по алфавиту виде. 
В решении используйте фамилию автора, а не его id.*/
select client.name_client
from client
     inner join buy using(client_id)
     inner join buy_book using(buy_id)
     inner join book using(book_id)
     inner join author using(author_id)
where author.name_author = "Достоевский Ф.М."
group by client.name_client
order by client.name_client

